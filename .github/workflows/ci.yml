name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install

      - name: Run linters
        run: |
          poetry run black --check .
          poetry run isort --check-only .
          poetry run flake8 .
          poetry run bandit -r .

      - name: Hugging Push
        uses: backendcloud/hugging-push@v0.2.3
        with:
          huggingface_repo: Canstralian/PhishingEmailEvaluation
          hf_token: ${{ secrets.HF_TOKEN }}
          repo_type: space
          space_sdk: gradio
          private: false

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install

      - name: Run tests and generate coverage report
        run: |
          poetry run pytest --cov=. --cov-report=xml -ra --maxfail=3

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}